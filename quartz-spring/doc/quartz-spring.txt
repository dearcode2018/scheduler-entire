

步骤1 配置 Job
方式1: 使用MethodInvokingJobDetailFactoryBean (simpleJobDetail)
<bean id="methodInvokingJobDetailFactoryBean"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject">
      <bean class="com.job.Task" />
    </property>
    <property name="targetMethod" value="job" />
    <!--  -->
    <property name="concurrent" value="true" />
 </bean>

方式2: 使用JobDetailFactoryBean (complexJobDetail)
<bean id="complexJobDetail"
    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    <property name="jobClass" value="com.scheduled.ScheduledJob" />
    <!-- 配置执行类中的参数设置 -->
    <property name="jobDataMap">
      <map>
        <entry key="task" value-ref="task"></entry>
      </map>
    </property>
    <property name="durability" value="true" />
 </bean>



步骤2 配置Trigger
方式1: 使用SimpleTriggerFactoryBean (不支持 cron 表达式)
<bean id="simpleTrigger"
    class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
    <property name="jobDetail" ref="methodInvokingJobDetailFactoryBean" />
    <!-- 没有cron表达式的支持，只能简单配置时间 -->
    <property name="startDelay" value="1000" />
    <property name="repeatInterval" value="2000" />
 </bean>

方式2: 使用CronTriggerFactoryBean (支持 cron 表达式)
<bean id="cronTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail" ref="complexJobDetail" />
    <property name="cronExpression" value="0/5 * * ? * SAT-SUN" />
 </bean>


说明: 步骤1、2的方式1、2可以交叉搭配，不同的是，步骤2的方式1不支持cron表达式，步骤1的Job方式1和2的
具体实现不同.










